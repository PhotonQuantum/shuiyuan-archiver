on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest, ubuntu-18.04, windows-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Setup Cargo Toolchain (Mac) üõéÔ∏è
        uses: actions-rs/toolchain@v1
        if: matrix.platform == 'macos-latest'
        with:
          toolchain: stable
          target: aarch64-apple-darwin
          profile: minimal
          default: true
      - name: Setup Cargo Toolchain üõéÔ∏è
        uses: actions-rs/toolchain@v1
        if: matrix.platform != 'macos-latest'
        with:
          toolchain: stable
          profile: minimal
          default: true
      - uses: Swatinem/rust-cache@v1
      - name: Install Dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-18.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
      - name: Cache Pnpm Modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: release-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            release-${{ runner.os }}-
      - uses: pnpm/action-setup@v2.1.0
        name: Install App Dependencies
        with:
          version: latest
          run_install: true
      - uses: PhotonQuantum/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        with:
          tagName: v__VERSION__
          releaseName: 'v__VERSION__'
          releaseBody: ''
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.platform == 'macos-latest' && '-v --target universal-apple-darwin' || '-v' }}
